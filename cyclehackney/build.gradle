buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:0.11.+'
  }
}

apply plugin: 'android'

repositories {
  mavenCentral()
}

dependencies {
    compile 'com.android.support:support-v4:+'
    compile project(':libraries:cyclestreets-view'),
            project(':libraries:cyclestreets-fragments')
}

android {
  Properties appConfig = loadProperties("../config.properties")

  compileSdkVersion appConfig['sdkVersion'].toInteger()
  buildToolsVersion appConfig['toolsVersion']

  defaultConfig {
    minSdkVersion appConfig['sdkVersion'].toInteger()
    targetSdkVersion appConfig['sdkVersion'].toInteger()
    versionCode appConfig['versionCode'].toInteger()
    versionName appConfig['versionName']
  }

  signingConfigs {
    release {
      Properties props = loadProperties("../local.properties")

      storeFile file(props['key.store'])
      storePassword props['key.password']
      keyAlias props['key.alias']
      keyPassword props['key.password']
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
    }
  }

  packagingOptions {
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/NOTICE.txt'
  }
}

android.applicationVariants.all { variant ->
  // modify AndroidManifest.xml
  variant.processManifest.doLast {
    copy {
      from "${buildDir}/intermediates/manifests/${variant.dirName}"
      into "${buildDir}/intermediates/manifests/${variant.dirName}"
      include "AndroidManifest.xml"
      rename '(.+)', '$1.original'
    }
    copy {
      from "${buildDir}/intermediates/manifests/${variant.dirName}"
      into "${buildDir}/intermediates/manifests/${variant.dirName}"
      include "AndroidManifest.xml.original"
      rename '(.+)(\\.original)', '$1'

      def apiKey = loadProperties("cyclestreets.properties")["cyclestreets.api.key"]
      filter {
        String line ->
          line.replaceAll("android:value=\"\\[cyclestreetsKey\\]\"",
                          "android:value=\"${apiKey}\"")
      }
    } // copy
  }
}

def loadProperties(fileName) {
  Properties props = new Properties()
  props.load(new FileInputStream(file(fileName)))
  return props;
}